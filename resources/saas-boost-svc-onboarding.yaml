---
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: 2010-09-09
Description: AWS SaaS Boost Onboarding Service
Parameters:
  Environment:
    Description: Environment name
    Type: String
  SaaSBoostBucket:
    Description: SaaS Boost assets S3 bucket
    Type: String
  LambdaSourceFolder:
    Description: Folder for lambda source code to change on each deployment
    Type: String
  SaaSBoostUtilsLayer:
    Description: Utils Layer ARN
    Type: String
  ApiGatewayHelperLayer:
    Description: API Gateway Helper Layer ARN
    Type: String
  SaaSBoostEventBus:
    Description: SaaS Boost Eventbridge Bus
    Type: String
  SaaSBoostPrivateApi:
    Description: SaaS Boost Private API
    Type: String
  PrivateApiStage:
    Description: The API Gateway REST API stage name for the SaaS Boost private API
    Type: String
  TenantServiceInsert:
    Description: Tenant Service Insert Lambda
    Type: String
  ECSRepository:
    Description: SaaS Boost ECR image repository
    Type: String
Resources:
  SSMParamOnboardingTemplate:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /saas-boost/${Environment}/ONBOARDING_TEMPLATE
      Type: String
      Value: tenant-onboarding.yaml
  OnboardingWorkflowExecRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-workflow-onboarding-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub sb-${Environment}-workflow-onboarding-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Ref TenantServiceInsert
                  - !GetAtt OnboardingServiceProvisionTenant.Arn
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                Resource: '*'
  OnboardingWorkflow:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub sb-${Environment}-onboarding
      StateMachineType: STANDARD
      RoleArn: !GetAtt OnboardingWorkflowExecRole.Arn
      DefinitionString: !Sub |
        {
          "Comment": "SaaS Boost Tenant Onboarding Flow",
          "StartAt": "InsertTenant",
          "States": {
            "InsertTenant": {
              "Type": "Task",
              "Resource": "${TenantServiceInsert}",
              "InputPath": "$",
              "ResultPath": "$.taskresult",
              "TimeoutSeconds": 300,
              "Next": "ProvisionTenant"
            },
            "ProvisionTenant": {
              "Type": "Task",
              "Resource": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:lambda:invoke",
              "Parameters": {
                "FunctionName": "${OnboardingServiceProvisionTenant.Arn}",
                "Payload": {
                  "body": {
                    "onboardingId.$": "$.onboardingId",
                    "tenant.$": "$.taskresult.body"
                  }
                }
              },
              "TimeoutSeconds": 300,
              "End": true
            }
          }
        }
  SSMParamOnboardingWorkflow:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /saas-boost/${Environment}/ONBOARDING_WORKFLOW
      Type: String
      Value: !Ref OnboardingWorkflow
  OnboardingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub sb-${Environment}-onboarding
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        - Key: SaaS Boost
          Value: !Ref Environment
  CidrBlockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub sb-${Environment}-cidr-mapping
      AttributeDefinitions:
        - AttributeName: cidr_block
          AttributeType: S
      KeySchema:
        - AttributeName: cidr_block
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        - Key: SaaS Boost
          Value: !Ref Environment
  PopulateDynamoDBExecRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-populate-ddb-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub sb-${Environment}-populate-ddb-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:BatchWriteItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${CidrBlockTable}
  PopulateDynamoDBLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-populate-ddb
      RetentionInDays: 30
  # Fills out the CIDR block lookup table used during onboarding
  PopulateDynamoDB:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-populate-ddb
      Role: !GetAtt PopulateDynamoDBExecRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.CidrDynamoDB
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/CidrDynamoDB-lambda.zip
  InvokePopulateDynamoDB:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !GetAtt PopulateDynamoDB.Arn
      Table: !Ref CidrBlockTable
  OnboardingServiceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-onboarding-svc-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub sb-${Environment}-onboarding-svc-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:CreateLogStream
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:PutRetentionPolicy
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/tenant*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tenant*
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${OnboardingTable}
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${CidrBlockTable}
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource:
                  - !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:sb-${Environment}-onboarding
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Tenant-*
              - Effect: Allow
                Action:
                  - cloudformation:UpdateStack
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sb-${Environment}*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Tenant-*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${SaaSBoostBucket}
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${SaaSBoostBucket}/*
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sb-*
              - Effect: Allow
                Action:
                  - ssm:Get*
                  - ssm:PutParameter
                  # This is for the AD stack -- need to figure out why update DNS wants to delete its SSM params
                  - ssm:DeleteParameter
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/saas-boost/${Environment}/*
                  - arn:aws:ssm:*:*:parameter/aws/service/ami-windows-latest/*
              - Effect: Allow
                Action:
                  - ec2:CreateInternetGateway
                  - ec2:CreateVpc
                  - ec2:ModifyVpcAttribute
                  - ec2:AttachInternetGateway
                  - ec2:CreateSubnet
                  - ec2:CreateSecurityGroup
                  - ec2:CreateRouteTable
                  - ec2:AssociateRouteTable
                  - ec2:Describe*
                  - ec2:CreateNetworkInterface
                  - ecs:CreateCapacityProvider
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:CreateTags
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
              - Effect: Allow
                Action:
                  - ssm:AddTagsToResource
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
              - Effect: Allow
                Action:
                  - ec2:CreateRoute
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
              - Effect: Allow
                Action:
                  - ec2:CreateTransitGatewayVpcAttachment
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
              - Effect: Allow
                Action:
                  - ec2:CreateTransitGatewayRoute
                  - ec2:AssociateTransitGatewayRouteTable
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-route-table/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:CreateTargetGroup
                  - elasticloadbalancing:ModifyTargetGroupAttributes
                Resource:
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/*/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:ModifyLoadBalancerAttributes
                  - elasticloadbalancing:CreateListener
                Resource:
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/app/*/*
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/net/*/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:CreateRule
                Resource:
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/app/*/*
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/net/*/*
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:GetRolePolicy
                  - iam:PutRolePolicy
                  - iam:PassRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/*tenant*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/Tenant*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/sb-${Environment}-rds-bootstrap-role-${AWS::Region}
              - Effect: Allow
                Action:
                  - iam:CreateInstanceProfile
                  - iam:AddRoleToInstanceProfile
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/Tenant-*
              - Effect: Allow
                Action:
                  - iam:CreateServiceLinkedRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
                Condition:
                  StringLike:
                    iam:AWSServiceName:
                      - ecs.application-autoscaling.amazonaws.com
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
              - Effect: Allow
                Action:
                  - ecs:DescribeClusters
                  - ecs:PutClusterCapacityProviders                  
                Resource:
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/tenant*
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:capacity-provider/*
              - Effect: Allow
                Action:
                  - ecs:CreateService
                  - ecs:DescribeServices
                  - ecs:UpdateService
                  - ecs:DescribeCapacityProviders
                Resource:
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/tenant*
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:capacity-provider/*
              - Effect: Allow
                Action:
                  - codepipeline:CreatePipeline
                  - codepipeline:GetPipeline
                  - codepipeline:GetPipelineState
                  - codepipeline:UpdatePipeline
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:tenant*
              - Effect: Allow
                Action:
                  - route53:GetHostedZone
                  - route53:ChangeResourceRecordSets
                  - route53:ListResourceRecordSets
                  - route53:ChangeTagsForResource
                  - route53:ListQueryLoggingConfigs
                  - route53:DeleteHostedZone
                Resource:
                  - arn:aws:route53:::hostedzone/*
              - Effect: Allow
                Action:
                  - route53:CreateHostedZone
                  - elasticfilesystem:CreateFileSystem
                  - ds:DescribeDirectories
                  - fsx:DescribeFileSystems
                  - fsx:DescribeStorageVirtualMachines
                  - fsx:DescribeVolumes
                  - application-autoscaling:Describe*
                  - application-autoscaling:RegisterScalableTarget
                  - application-autoscaling:PutScalingPolicy
                  - autoscaling:Describe*
                  - ecs:CreateCluster
                  - ecs:RegisterTaskDefinition
                  - ecs:DeregisterTaskDefinition
                  - ecs:TagResource
                  - ecs:UntagResource
                  - elasticloadbalancing:Describe*
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:RemoveTags
                  - kms:List*
                  - kms:CreateKey
                  - kms:Describe*
                  - kms:Get*
                Resource: '*'
              - Effect: Allow
                Action:
                - kms:TagResource
                - kms:PutKeyPolicy
                - kms:CreateAlias
                - kms:UpdateAlias
                Resource:
                - !Sub arn:aws:kms:*:${AWS::AccountId}:alias/*
                - !Sub arn:aws:kms:*:${AWS::AccountId}:key/*
              - Effect: Allow
                Action:
                  - route53:GetChange
                Resource:
                  - arn:aws:route53:::change/*
              - Effect: Allow
                Action:
                  - elasticfilesystem:Describe*
                  - elasticfilesystem:CreateMountTarget
                  - elasticfilesystem:CreateTags
                  - elasticfilesystem:PutFileSystemPolicy
                  - elasticfilesystem:PutLifecycleConfiguration
                  - fsx:CreateFileSystem
                  - fsx:CreateStorageVirtualMachine
                  - fsx:CreateVolume
                  - fsx:TagResource
                Resource:
                  - !Sub arn:aws:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:file-system/*
                  - !Sub arn:aws:fsx:${AWS::Region}:${AWS::AccountId}:file-system/*
                  - !Sub arn:aws:fsx:${AWS::Region}:${AWS::AccountId}:storage-virtual-machine/*
                  - !Sub arn:aws:fsx:${AWS::Region}:${AWS::AccountId}:volume/*
              - Effect: Allow
                Action:
                  - rds:DescribeDBClusters
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:tenant*
              - Effect: Allow
                Action:
                  - rds:CreateDBCluster
                  - rds:AddTagsToResource
                  - rds:RemoveTagsFromResource
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:tenant*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster-pg:*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:tenant*
              - Effect: Allow
                Action:
                  - rds:DescribeDBSubnetGroups
                  - rds:CreateDBSubnetGroup
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:tenant*
              - Effect: Allow
                Action:
                  - rds:DescribeDBInstances
                  - rds:CreateDBInstance
                  - rds:AddTagsToResource
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:tenant*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:secgrp:*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:tenant*
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource:
                  - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/${SaaSBoostEventBus}
              - Effect: Allow
                Action:
                  - autoscaling:CreateLaunchConfiguration
                Resource:
                  - !Sub arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:launchConfiguration:*:launchConfigurationName/Tenant-*
              - Effect: Allow
                Action:
                  - autoscaling:CreateAutoScalingGroup
                  - autoscaling:UpdateAutoScalingGroup
                  - autoscaling:SuspendProcesses
                  - autoscaling:ResumeProcesses
                  - autoscaling:CreateOrUpdateTags
                Resource:
                  - !Sub arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/tenant-*
              - Effect: Allow
                Action:
                  - ecr:ListImages
                Resource:
                  - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ECSRepository}
              - Effect: Allow
                Action:
                  - lambda:Get*
                  - lambda:CreateFunction
                  - lambda:InvokeFunction
                  - lambda:UpdateFunctionCode
                  - lambda:DeleteFunction
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:tenant*
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:Tenant* 
              - Effect: Allow
                Action:
                  - ec2:RevokeSecurityGroupEgress
                  - ec2:AuthorizeSecurityGroupEgress
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
              # This is for the AD stack -- need to figure out why update DNS wants to delete the directory
              - Effect: Allow
                Action:
                  - ds:DeleteDirectory
                Resource:
                  - !Sub arn:aws:ds:${AWS::Region}:${AWS::AccountId}:directory/*
  OnboardingServiceDeleteTenantExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-onboarding-delete-tenant-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub sb-${Environment}-onboarding-delete-tenant-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:CreateLogStream
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:PutRetentionPolicy
                  - logs:DeleteLogGroup
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/tenant*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tenant*
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${OnboardingTable}
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${CidrBlockTable}
              - Effect: Allow
                Action:
                  - cloudformation:DeleteStack
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Tenant-*
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sb-*
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/saas-boost/${Environment}/*
                  - arn:aws:ssm:*:*:parameter/aws/service/ami-windows-latest/*
              - Effect: Allow
                Action:
                  - ec2:DeleteInternetGateway
                  - ec2:Describe*
                  - ec2:DeleteVpc
                  - ec2:DetachInternetGateway
                  - ec2:DeleteSubnet
                  - ec2:DeleteSecurityGroup
                  - ec2:DeleteRouteTable
                  - ec2:DisassociateRouteTable
                  - ec2:DeleteNetworkInterface
                  - kms:DeleteAlias
                  - kms:GetKeyPolicy
                  - kms:DescribeKey
                  - kms:UntagResource
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:DeleteTags
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
              - Effect: Allow
                Action:
                  - ec2:RevokeSecurityGroupIngress
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
              - Effect: Allow
                Action:
                  - ec2:DeleteRoute
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
              - Effect: Allow
                Action:
                  - ec2:DeleteTransitGatewayVpcAttachment
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
              - Effect: Allow
                Action:
                  - ec2:DeleteTransitGatewayRoute
                  - ec2:DisassociateTransitGatewayRouteTable
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-route-table/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DeleteTargetGroup
                Resource:
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/*/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DeleteLoadBalancer
                Resource:
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/app/*/*
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/net/*/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DeleteRule
                  - elasticloadbalancing:DeleteListener
                Resource:
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/app/*/*
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/net/*/*
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener-rule/app/*
              - Effect: Allow
                Action:
                  - iam:GetRolePolicy
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/*tenant*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/Tenant*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/sb-${Environment}-rds-bootstrap-role-${AWS::Region}
              - Effect: Allow
                Action:
                  - iam:DeleteInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/Tenant-*
              - Effect: Allow
                Action:
                  - iam:DeleteServiceLinkedRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
                Condition:
                  StringLike:
                    iam:AWSServiceName:
                      - ecs.application-autoscaling.amazonaws.com
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
              - Effect: Allow
                Action:
                  - ecs:DescribeClusters
                Resource:
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/tenant*
              - Effect: Allow
                Action:
                  - ecs:DescribeClusters
                  - ecs:PutClusterCapacityProviders                  
                Resource:
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/tenant*                  
              - Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DeleteService
                  - ecs:DeleteCapacityProvider
                  - ecs:DescribeCapacityProviders
                Resource:
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/tenant*
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:capacity-provider/tenant*                  
              - Effect: Allow
                Action:
                  - codepipeline:GetPipeline
                  - codepipeline:GetPipelineState
                  - codepipeline:DeletePipeline
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:tenant*
              - Effect: Allow
                Action:
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                  - route53:ListQueryLoggingConfigs
                  - route53:DeleteHostedZone
                  - route53:ChangeResourceRecordSets
                Resource:
                  - arn:aws:route53:::hostedzone/*
              - Effect: Allow
                Action:
                  - elasticfilesystem:DeleteFileSystem
                  - ds:DescribeDirectories
                  - fsx:DescribeFileSystems
                  - fsx:DescribeStorageVirtualMachines
                  - fsx:DescribeVolumes
                  - application-autoscaling:Describe*
                  - application-autoscaling:DeleteScalingPolicy
                  - autoscaling:Describe*
                  - autoscaling:DeleteTags
                  - application-autoscaling:DeregisterScalableTarget
                  - ecs:DeleteCluster
                  - ecs:DescribeTaskDefinition
                  - ecs:DeregisterTaskDefinition
                  - ecs:UntagResource
                  - elasticloadbalancing:Describe*
                  - elasticloadbalancing:RemoveTags
                Resource: '*'
              - Effect: Allow
                Action:
                  - route53:GetChange
                Resource:
                  - arn:aws:route53:::change/*
              - Effect: Allow
                Action:
                  - elasticfilesystem:DescribeFileSystems
                  - elasticfilesystem:DeleteMountTarget
                  - elasticfilesystem:DescribeMountTargets
                  - elasticfilesystem:DescribeTags
                  - elasticfilesystem:DeleteFileSystemPolicy
                  - fsx:DescribeFileSystems
                  - fsx:DescribeStorageVirtualMachines
                  - fsx:DescribeVolumes
                  - fsx:DeleteFileSystem
                  - fsx:DeleteStorageVirtualMachine
                  - fsx:DeleteVolume
                  - fsx:TagResource
                Resource:
                  - !Sub arn:aws:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:file-system/*
                  - !Sub arn:aws:fsx:${AWS::Region}:${AWS::AccountId}:file-system/*
                  - !Sub arn:aws:fsx:${AWS::Region}:${AWS::AccountId}:storage-virtual-machine/*
                  - !Sub arn:aws:fsx:${AWS::Region}:${AWS::AccountId}:volume/*
              - Effect: Allow
                Action:
                  - rds:DescribeDBClusters                  
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:tenant*
              - Effect: Allow
                Action:
                  - rds:DeleteDBCluster
                  - rds:CreateDBClusterSnapshot
                  - rds:DescribeDBClusterSnapshots
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:tenant*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster-pg:*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:tenant*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster-snapshot:*
              - Effect: Allow
                Action:
                  - rds:DescribeDBSubnetGroups
                  - rds:DeleteDBSubnetGroup
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:tenant*
              - Effect: Allow
                Action:
                  - rds:DescribeDBInstances
                  - rds:DeleteDBInstance
                  - rds:RemoveTagsFromResource
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:tenant*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:secgrp:*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:tenant*
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource:
                  - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/${SaaSBoostEventBus}
              - Effect: Allow
                Action:
                  - autoscaling:DeleteLaunchConfiguration
                Resource:
                  - !Sub arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:launchConfiguration:*:launchConfigurationName/Tenant-*
              - Effect: Allow
                Action:
                  - autoscaling:DeleteAutoScalingGroup
                  - autoscaling:UpdateAutoScalingGroup
                  - autoscaling:SuspendProcesses
                Resource:
                  - !Sub arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/tenant-*
              - Effect: Allow
                Action:
                  - ecr:ListImages
                Resource:
                  - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ECSRepository}
              - Effect: Allow
                Action:
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:InvokeFunction
                  - lambda:DeleteFunction
                  - lambda:CreateFunction
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:tenant*
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:Tenant* 
              - Effect: Allow
                Action:
                  - ssm:Get*
                  - ssm:DeleteParameter
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/saas-boost/${Environment}/*                
              - Effect: Allow
                Action:
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
  OnboardingServiceGetAllLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-get-all
      RetentionInDays: 30
  OnboardingServiceGetAll:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-get-all
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::getOnboardings
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
  OnboardingServiceGetByIdLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-get-by-id
      RetentionInDays: 30
  OnboardingServiceGetById:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-get-by-id
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::getOnboarding
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
  OnboardingServiceStartLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-start
      RetentionInDays: 30
  OnboardingServiceStart:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-start
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::startOnboarding
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
          ONBOARDING_WORKFLOW: !Ref OnboardingWorkflow
          API_TRUST_ROLE: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
          ECR_REPO: !Ref ECSRepository
          SAAS_BOOST_BUCKET: !Ref SaaSBoostBucket
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
  OnboardingServiceUpdateStatusLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-update-status
      RetentionInDays: 30
  OnboardingServiceUpdateStatus:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-update-status
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::updateStatus
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
  OnboardingServiceProvisionTenantLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-provision
      RetentionInDays: 30
  OnboardingServiceProvisionTenant:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-provision
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 600
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::provisionTenant
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          ONBOARDING_TABLE: !Ref OnboardingTable
          CIDR_BLOCK_TABLE: !Ref CidrBlockTable
          API_TRUST_ROLE: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"

  OnboardingServiceDeleteTenantLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-delete
      RetentionInDays: 30
  OnboardingServiceDeleteTenant:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-delete
      Role: !GetAtt OnboardingServiceDeleteTenantExecutionRole.Arn
      Runtime: java11
      Timeout: 600
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::deleteTenant
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          ONBOARDING_TABLE: !Ref OnboardingTable
          CIDR_BLOCK_TABLE: !Ref CidrBlockTable
          API_TRUST_ROLE: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"

  OnboardingServiceDeleteTenantEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-onboarding-delete-rule
      Description: Delete provisioned tenant
      EventBusName: !Ref SaaSBoostEventBus
      EventPattern:
        detail-type:
          - Delete Tenant
        source:
          - saas-boost
      State: ENABLED
      Targets:
        - Arn: !GetAtt OnboardingServiceDeleteTenant.Arn
          Id: OnboardingServiceDeleteTenant

  OnboardingServiceDeleteTenantFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt OnboardingServiceDeleteTenant.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt OnboardingServiceDeleteTenantEventRule.Arn

  OnboardingStatusListenerLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-listener
      RetentionInDays: 30
  OnboardingStatusListener:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-listener
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 600
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::statusEventListener
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
          SAAS_BOOST_EVENT_BUS: !Ref SaaSBoostEventBus
          SAAS_BOOST_BUCKET: !Ref SaaSBoostBucket
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
  CodePipelineExecutionStateChangeEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-tenant-pipeline
      EventPattern:
        source: ['aws.codepipeline']
        detail-type: ['CodePipeline Pipeline Execution State Change']
      State: ENABLED
      Targets:
        - Arn: !GetAtt OnboardingStatusListener.Arn
          Id: sb-onboarding-status-listener-lambda
  CodePipelineExecutionStateChangeEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref OnboardingStatusListener
      Principal: events.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !GetAtt CodePipelineExecutionStateChangeEvent.Arn
  OnboardingUpdateDomainLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-update-dns
      RetentionInDays: 30
  OnboardingUpdateDomain:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-update-dns
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 600
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::resetDomainName
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
          API_TRUST_ROLE: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
  OnboardingUpdateTenantLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-update-tenant
      RetentionInDays: 30
  OnboardingUpdateTenant:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-update-tenant
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 600
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::updateProvisionedTenant
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
          API_TRUST_ROLE: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
Outputs:
  OnboardingServiceGetAllArn:
    Description: Onboarding Service get all onboarding requests Lambda ARN
    Value: !GetAtt OnboardingServiceGetAll.Arn
  OnboardingServiceStartArn:
    Description: Onboarding Service start onboarding Lambda ARN
    Value: !GetAtt OnboardingServiceStart.Arn
  OnboardingServiceByIdArn:
    Description: Onboarding Service get onboarding request by id Lambda ARN
    Value: !GetAtt OnboardingServiceGetById.Arn
  OnboardingServiceUpdateStatusArn:
    Description: Onboarding Service update status Lambda ARN
    Value: !GetAtt OnboardingServiceUpdateStatus.Arn
  OnboardingStatusListenerArn:
    Description: Onboarding Service status uplodate listener Lambda ARN
    Value: !GetAtt OnboardingStatusListener.Arn
  OnboardingUpdateDomainArn:
    Description: Onboarding Service update SaaS Boost domain Lambda ARN
    Value: !GetAtt OnboardingUpdateDomain.Arn
  OnboardingUpdateTenantArn:
    Description: Onboarding Service update provisioned tenant Lambda ARN
    Value: !GetAtt OnboardingUpdateTenant.Arn
...