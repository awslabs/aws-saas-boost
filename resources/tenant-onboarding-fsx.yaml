---
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: 2010-09-09
Description: AWS SaaS Boost Tenant Onboarding FSx for Windows File Server Extension
Parameters:
  Environment:
    Description: Environment (test, uat, prod, etc.)
    Type: String
  Tier:
    Description: The tier this tenant is onboading into
    Type: String
    Default: ''
  TenantId:
    Description: The GUID for the tenant
    Type: String
  SaaSBoostBucket:
    Description: SaaS Boost assets S3 bucket
    Type: String
  ServiceResourceName:
    Description: CloudFormation friendly version of the service name
    Type: String
  VPC:
    Description: VPC id for this tenant
    Type: AWS::EC2::VPC::Id
  PrivateSubnetA:
    Description: Choose the Id of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd).
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetB:
    Description: Choose the Id of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd).
    Type: AWS::EC2::Subnet::Id
  PrivateRouteTable:
    Description: Route table for the private subnets in this tenant's VPC
    Type: String
  ECSSecurityGroup:
    Description: Source security group of ECS instances
    Type: AWS::EC2::SecurityGroup::Id
  ActiveDirectoryId:
    Description: Id of the AWS Managed Microsoft AD. If you are using self-managed Active Directory, leave this blank.
    Type: String
  ActiveDirectoryDnsIps:
    Description: Comma delimited string of DNS IP addresses for the Active Directory instance to join the SVM to for FSx ONTAP
    Type: String
    Default: ''
  FileSystemType:
    Description: FSx file system type
    Type: String
    AllowedValues: [FSX_WINDOWS, FSX_ONTAP]
    Default: FSX_WINDOWS
  FSxEncryptionKey:
    Description: Use the default AWS Key Management Service (AWS KMS) key for Amazon FSx, choose GenerateKey to create a key,
      or choose UseKey to use an existing key for encryption at rest on the Amazon FSx for Windows file system.
    Type: String
    AllowedValues: [Default, GenerateKey, UseKey]
    Default: Default
  FSxExistingKeyID:
    Description: If you chose the option to use an existing key, you must specify the KMS Key ID you want to use.
    Type: String
    Default: ''
  StorageCapacity:
    Description: Specify the storage capacity of the file system being created in GB
    Type: Number
    Default: 32
  ThroughputCapacity:
    Description: Specify the throughput of the Amazon FSx file system
    Type: Number
    Default: 16
  BackupRetention:
    Description: Number of days to retain automatic backups
    Type: Number
    Default: 7
  DailyBackupTime:
    Description: Preferred time to take daily automatic backups, formatted HH:MM in the UTC time zone.
    Type: String
    Default: '02:00'
  WeeklyMaintenanceTime:
     Description: Specify the preferred start time to perform weekly maintenance, formatted d:HH:MM in the UTC time zone
     Type: String
     Default: '7:01:00'
  OntapVolumeSize:
    Description: Specify the size of the ONTAP volume to create inside the Storage Virtual Machine in MB
    Type: Number
    Default: 1024
    MinValue: 1024
    MaxValue: 102400
Conditions:
  UseAWSDirectoryService: !Not [!Equals [!Ref ActiveDirectoryId, '']]
  HasKey: !Equals [!Ref FSxEncryptionKey, 'UseKey']
  CreateKey: !Equals [!Ref FSxEncryptionKey, 'GenerateKey']
  UseNonDefault: !Not [!Equals [!Ref FSxEncryptionKey, 'Default']]
  FSxWindows: !Equals [!Ref FileSystemType, 'FSX_WINDOWS']
  FSxONTAP: !Equals [!Ref FileSystemType, 'FSX_ONTAP']
Resources:
  FSxKMSKey:
    Condition: CreateKey
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: !Sub sb-${Environment}-fsx-key-${TenantId}-${ServiceResourceName}
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:ListGrants
              - kms:DescribeKey
            Resource: '*'
            Condition:
              StringEquals:
                kms:ViaService: !Sub fsx.${AWS::Region}.amazonaws.com
                kms:CallerAccount: !Ref 'AWS::AccountId'
      Tags:
        - Key: Name
          Value:
            Fn::Join: ['', ['sb-', !Ref Environment, '-fsx-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
        - Key: Tenant
          Value: !Ref TenantId
        - Key: Tier
          Value: !Ref Tier
  FSxKeyAlias:
    Condition: CreateKey
    Type: AWS::KMS::Alias
    Properties:
      AliasName:
        Fn::Join: ['', ['alias/sb-', !Ref Environment, '-fsx-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
      TargetKeyId: !Ref FSxKMSKey
  FSxActiveDirectorySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: FSx Active Directory Security Group
      GroupName:
        Fn::Join: ['', ['sb-', !Ref Environment, '-fsx-ad-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          Description: DNS
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 53
          ToPort: 53
          Description: DNS
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 88
          ToPort: 88
          Description: Kerberos authentication
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 88
          ToPort: 88
          Description: Kerberos authentication
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          Description: NTP
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 135
          ToPort: 135
          Description: DCE / EPMAP
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 389
          ToPort: 389
          Description: LDAP
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 389
          ToPort: 389
          Description: LDAP
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 445
          ToPort: 445
          Description: Directory Services SMB file sharing
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 464
          ToPort: 464
          Description: Change or Set password
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 464
          ToPort: 464
          Description: Change or Set password
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 636
          ToPort: 636
          Description: LDAP over SSL
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 3268
          ToPort: 3268
          Description: Microsoft Global Catalog
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 3269
          ToPort: 3269
          Description: Microsoft Global Catalog over SSL
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 5985
          ToPort: 5985
          Description: WinRM 2.0
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 9389
          ToPort: 9389
          Description: Microsoft AD DS Web Services and PowerShell
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 49152
          ToPort: 65535
          Description: RPC ephemeral ports
          SourceSecurityGroupId: !Ref ECSSecurityGroup
  FSxOntapSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: FSxONTAP
    Properties:
      VpcId: !Ref VPC
      GroupDescription: FSx ONTAP Security Group
      GroupName:
        Fn::Join: ['', ['sb-', !Ref Environment, '-fsx-ontap-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          Description: ICMP Ping
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          Description: SSH access to cluster or node management LIF
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 111
          ToPort: 111
          Description: Remote procedure call for NFS
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 111
          ToPort: 111
          Description: Remote procedure call for NFS
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 135
          ToPort: 135
          Description: Remote procedure call for CIFS
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 135
          ToPort: 135
          Description: Remote procedure call for CIFS
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 137
          ToPort: 137
          Description: NetBIOS name resolution for CIFS
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 139
          ToPort: 139
          Description: NetBIOS service session for CIFS
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 139
          ToPort: 139
          Description: NetBIOS service session for CIFS
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 161
          ToPort: 162
          Description: SNMP
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 161
          ToPort: 162
          Description: SNMP
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: ONTAP REST API access for cluster management LIF or SVM management LIF
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 635
          ToPort: 635
          Description: NFS mount
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 635
          ToPort: 635
          Description: NFS mount
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 749
          ToPort: 749
          Description: Kerberos
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          Description: NFS server daemon
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 2049
          ToPort: 2049
          Description: NFS server daemon
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 3260
          ToPort: 3260
          Description: iSCSI to the iSCSI data LIF
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 4045
          ToPort: 4045
          Description: NFS lock daemon
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 4045
          ToPort: 4045
          Description: NFS lock daemon
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 4046
          ToPort: 4046
          Description: NFS network status monitor
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 4046
          ToPort: 4046
          Description: NFS network status monitor
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: udp
          FromPort: 4049
          ToPort: 4049
          Description: NFS quota protocol
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 10000
          ToPort: 10000
          Description: NDMP and NetApp SnapMirror
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 11104
          ToPort: 11104
          Description: NetApp SnapMirror management
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 11105
          ToPort: 11105
          Description: NetApp SnapMirror data transfer
          SourceSecurityGroupId: !Ref ECSSecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: Allowing FsxOntapCifsShareFunction access to FSx ONTAP for CIFS creation
          #"0.0.0.0/0" needs to be updated to the specific Network Interface Private IP that gets assigned to the lambda function if a way to extract it exists
          CidrIp: "0.0.0.0/0"
  FSxFileSystem:
    Type: AWS::FSx::FileSystem
    Properties:
      FileSystemType: !If
        - FSxWindows
        - WINDOWS
        - !If
          - FSxONTAP
          - ONTAP
          - !Ref 'AWS::NoValue'
      KmsKeyId: !If
        - UseNonDefault
        - !If
          - HasKey
          - !Ref FSxExistingKeyID
          - !Ref FSxKMSKey
        - !Ref 'AWS::NoValue'
      StorageCapacity: !Ref StorageCapacity
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      SecurityGroupIds:
        - !Ref FSxActiveDirectorySecurityGroup
        - !If [FSxONTAP, !Ref FSxOntapSecurityGroup, !Ref 'AWS::NoValue']
      Tags:
        - Key: Name
          Value:
            Fn::Join: ['', ['sb-', !Ref Environment, '-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
        - Key: Tenant
          Value: !Ref TenantId
        - Key: Tier
          Value: !Ref Tier
      WindowsConfiguration: !If
        - FSxWindows
        -
          ActiveDirectoryId: !If [UseAWSDirectoryService, !Ref ActiveDirectoryId, !Ref 'AWS::NoValue']
          WeeklyMaintenanceStartTime: !Ref WeeklyMaintenanceTime
          DailyAutomaticBackupStartTime: !Ref DailyBackupTime
          AutomaticBackupRetentionDays: !Ref BackupRetention
          DeploymentType: MULTI_AZ_1
          PreferredSubnetId: !Ref PrivateSubnetA
          ThroughputCapacity: !Ref ThroughputCapacity
        - !Ref 'AWS::NoValue'
      OntapConfiguration: !If
        - FSxONTAP
        -
          WeeklyMaintenanceStartTime: !Ref WeeklyMaintenanceTime
          DailyAutomaticBackupStartTime: !Ref DailyBackupTime
          AutomaticBackupRetentionDays: !Ref BackupRetention
          DeploymentType: MULTI_AZ_1
          PreferredSubnetId: !Ref PrivateSubnetA
          ThroughputCapacity: !Ref ThroughputCapacity
          #Password can be stored in Secrets manager and referenced from there
          FsxAdminPassword: "Netapp123"
          RouteTableIds: !Split [',', !Ref PrivateRouteTable]
        - !Ref 'AWS::NoValue'
  StorageVirtualMachine:
    Type: AWS::FSx::StorageVirtualMachine
    Condition: FSxONTAP
    Properties:
      FileSystemId: !Ref FSxFileSystem
      Name:
        Fn::Join: ['', ['sb-', !Ref Environment, '-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
      RootVolumeSecurityStyle: NTFS
      ActiveDirectoryConfiguration:
        # Max string length 15. Since this is bound to a SVM and a File System, we don't need the env or service name.
        NetBiosName:
          Fn::Join: ['', ['tenant-', !Select [0, !Split ['-', !Ref TenantId]]]]
        # TODO how do we support non SaaS Boost provisioned AD instances?
        SelfManagedActiveDirectoryConfiguration:
          OrganizationalUnitDistinguishedName: !Sub OU=Computers,OU=sb-${Environment},DC=${Environment},DC=${AWS::Region},DC=saasboost,DC=com
          FileSystemAdministratorsGroup: AWS Delegated FSx Administrators
          DomainName: !Sub '{{resolve:ssm:/saas-boost/${Environment}/ACTIVE_DIRECTORY_DNS_NAME}}'
          # Must pass the comma delimited string in as a parameter, because {{resolve:ssm:}} can't
          # be nested inside a Fn::Split. The split happens before the resolution of the parameter.
          DnsIps: !Split [',', !Ref ActiveDirectoryDnsIps]
          # Don't use Domain\Username here - only Username
          UserName: !Sub '{{resolve:ssm:/saas-boost/${Environment}/ACTIVE_DIRECTORY_USER}}'
          # Can't use ssm-secure here
          Password: !Sub '{{resolve:secretsmanager:/saas-boost/${Environment}/ACTIVE_DIRECTORY_PASSWORD::::}}'
      Tags:
        - Key: Name
          Value:
            Fn::Join: ['', ['sb-', !Ref Environment, '-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
        - Key: Tenant
          Value: !Ref TenantId
        - Key: Tier
          Value: !Ref Tier
  StorageVolume:
    Type: AWS::FSx::Volume
    Condition: FSxONTAP
    Properties:
      VolumeType: ONTAP
      Name: vol1
      OntapConfiguration:
        JunctionPath: /vol1
        SecurityStyle: NTFS
        SizeInMegabytes: !Ref OntapVolumeSize
        StorageEfficiencyEnabled: 'false' # Quoted to make cfn-lint happy
        StorageVirtualMachineId: !Ref StorageVirtualMachine
      Tags:
        - Key: Name
          Value:
            Fn::Join: ['', ['sb-', !Ref Environment, '-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
        - Key: Tenant
          Value: !Ref TenantId
        - Key: Tier
          Value: !Ref Tier
  FsxDnsNameRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join: ['', ['sb-', !Ref Environment, '-fsx-dns-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName, '-', !Ref AWS::Region]]
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName:
            Fn::Join: ['', ['sb-', !Ref Environment, '-fsx-dns-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:CreateLogStream
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - fsx:DescribeFileSystems
                  - fsx:DescribeStorageVirtualMachines
                Resource: '*'
  FsxDnsNameLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join: ['', ['/aws/lambda/sb-', !Ref Environment, '-fsx-dns-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
      RetentionInDays: 30
  FsxDnsNameFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - FsxDnsNameLogs
    Properties:
      FunctionName:
        Fn::Join: ['', ['sb-', !Ref Environment, '-fsx-dns-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
      Role: !GetAtt FsxDnsNameRole.Arn
      Runtime: java11
      Timeout: 870
      MemorySize: 640
      # Has to be a VPC Lambda because we're talking to FSx
      VpcConfig:
        SecurityGroupIds:
          - !Ref FSxActiveDirectorySecurityGroup
          - !If [FSxONTAP, !Ref FSxOntapSecurityGroup, !Ref 'AWS::NoValue']
        SubnetIds:
          - !Ref PrivateSubnetA
          - !Ref PrivateSubnetB
      Handler: com.amazon.aws.partners.saasfactory.saasboost.FsxDnsName
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub '{{resolve:ssm:/saas-boost/${Environment}/SAAS_BOOST_LAMBDAS_FOLDER}}/FsxDnsName-lambda.zip'
      Layers:
         - !Sub '{{resolve:ssm:/saas-boost/${Environment}/UTILS_LAYER}}'
         - !Sub '{{resolve:ssm:/saas-boost/${Environment}/CFN_UTILS_LAYER}}'
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: Name
          Value:
            Fn::Join: ['', ['sb-', !Ref Environment, '-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
        - Key: Tenant
          Value: !Ref TenantId
        - Key: Tier
          Value: !Ref Tier
  InvokeGetFsxDnsName:
    Type: Custom::CustomResource
    DependsOn:
      - FsxDnsNameLogs
    DeletionPolicy: Retain
    Properties:
      ServiceToken: !GetAtt FsxDnsNameFunction.Arn
      FsxFileSystemId: !Ref FSxFileSystem
      StorageVirtualMachineId: !If [FSxONTAP, !Ref StorageVirtualMachine, '']
  
  FSxOntapCifsFunctionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: FSx ONTAP CIFS Share Creation Lambda Security Group
      GroupName:
        Fn::Join: ['', ['sb-', !Ref Environment, '-fsx-cifs-share-function-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          Description: Egress Traffic allowed for Lambda function for configuring CIFS share
          CidrIp: "0.0.0.0/0"
  
  FsxOntapCifsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join: ['', ['sb-', !Ref Environment, '-fsx-cifs-share-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName, '-', !Ref AWS::Region]]
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName:
            Fn::Join: ['', ['sb-', !Ref Environment, '-fsx-difs-share-function-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName, '-', !Ref AWS::Region]]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - fsx:DescribeFileSystems
                  - fsx:DescribeStorageVirtualMachines
                Resource: '*'

  FsxOntapCifsShareFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - FsxOntapCifsFunctionRole
      - FSxFileSystem
      - StorageVirtualMachine
      - StorageVolume
      - FSxOntapCifsFunctionSecurityGroup
      - InvokeGetFsxDnsName
    Condition: FSxONTAP    
    Properties:
      Handler: index.lambda_handler
      Description: "Creates CIFS Share for ONTAP Volume"
      Timeout: 5
      Role: !GetAtt 'FsxOntapCifsFunctionRole.Arn'
      Runtime: python3.9
      Environment:
        Variables:
          #Password set above during FSX ONTAP creation needs to be referenced below
          fsxadmin_password: 'Netapp123'
          fsxEndpoint: !GetAtt InvokeGetFsxDnsName.fsxDnsFS
          svm_name:
            Fn::Join: ['', ['sb-', !Ref Environment, '-tenant-', !Select [0, !Split ['-', !Ref TenantId]], '-', !Ref ServiceResourceName]]
          svm_uuid: !GetAtt StorageVirtualMachine.UUID
          vol_name: 'vol1'
      VpcConfig:
        SecurityGroupIds:
          - !Ref FSxOntapCifsFunctionSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnetA
          - !Ref PrivateSubnetB
      Code:
        ZipFile: |
          import json
          import urllib3
          import base64
          import os
          import cfnresponse
                  
          def lambda_handler(event, context):
              http = urllib3.PoolManager(cert_reqs="CERT_NONE")
              
              
              fsxUrl = "https://{}/api/protocols/cifs/shares?return_records=true".format(os.environ['fsxEndpoint'])
              uname_pwd = "fsxadmin:{}".format(os.environ['fsxadmin_password'])
              uname_pwd_bytes = uname_pwd.encode("ascii")
              uname_pwd_base64_bytes = base64.b64encode(uname_pwd_bytes)
              encoded_uname_pwd = uname_pwd_base64_bytes.decode("ascii")
              
              headers_api = {
                  "accept": "application/json",
                  "authorization": "Basic {}".format(encoded_uname_pwd),
                  "Content-Type": "application/json"
              }
              
              formData = {
                  "access_based_enumeration": "false",
                  "change_notify": "true",
                  "encryption": "false",
                  "home_directory": "false",
                  "name": "{}share".format(os.environ['vol_name']),
                  "oplocks": "true",
                  "path": "/{}".format(os.environ['vol_name']),
                  "svm": {
                      "name": os.environ['svm_name'],
                      "uuid": os.environ['svm_uuid']
                  },
                  "unix_symlink": "local"
              }
              
              encoded_data = json.dumps(formData).encode('utf-8')
              response = http.request("POST",fsxUrl,headers=headers_api, body=encoded_data)
              responseData = {}
              responseData['test'] = 'test'
              cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
              return

  InvokeOntapCifsShareFunction:
    Type: Custom::CustomResource
    DependsOn:
      - FsxOntapCifsShareFunction
    DeletionPolicy: Retain
    Properties:
      ServiceToken: !GetAtt FsxOntapCifsShareFunction.Arn
  
Outputs:
  FileSystemId:
    Description: FSx File System ID
    Value: !Ref FSxFileSystem
  FSxDnsName:
    Value: !GetAtt InvokeGetFsxDnsName.DnsName
    Description: FSx File Server DNS Name
