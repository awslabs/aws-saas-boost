---
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: 2010-09-09
Description: AWS SaaS Boost Settings Service
Parameters:
  Environment:
    Description: Environment name
    Type: String
  SaaSBoostBucket:
    Description: SaaS Boost assets S3 bucket
    Type: String
  LambdaSourceFolder:
    Description: Folder for lambda source code to change on each deployment
    Type: String
  SaaSBoostUtilsLayer:
    Description: Utils Layer ARN
    Type: String
  ApiGatewayHelperLayer:
    Description: API Gateway Helper Layer ARN
    Type: String
  CloudFormationUtilsLayer:
    Description: CloudFormation Utils Layer ARN
    Type: String
  SaaSBoostEventBus:
    Description: SaaS Boost Eventbridge Bus
    Type: String
  SaaSBoostPrivateApi:
    Description: SaaS Boost Private API
    Type: String
  PrivateApiStage:
    Description: The API Gateway REST API stage name for the SaaS Boost private API
    Type: String
  ResourcesBucket:
    Description: S3 bucket containing tenant custom config files (zip archive)
    Type: String
Resources:
  RdsOptionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub sb-${Environment}-rds-options
      AttributeDefinitions:
        - AttributeName: region
          AttributeType: S
        - AttributeName: engine
          AttributeType: S
      KeySchema:
        - AttributeName: region
          KeyType: HASH
        - AttributeName: engine
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  RdsOptionsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-rds-options-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub sb-${Environment}-rds-options-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:CreateLogStream
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:PutItem
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${RdsOptionsTable}
              - Effect: Allow
                Action:
                  - rds:DescribeOrderableDBInstanceOptions
                  - rds:DescribeDBEngineVersions
                Resource: '*'
  RdsOptionsLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-rds-options
      RetentionInDays: 30
  RdsOptions:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-rds-options
      Role: !GetAtt RdsOptionsExecutionRole.Arn
      Runtime: java11
      Timeout: 720
      MemorySize: 768
      Handler: com.amazon.aws.partners.saasfactory.saasboost.RdsOptions
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref CloudFormationUtilsLayer
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/RdsOptions-lambda.zip
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  InvokeRdsOptions:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !GetAtt RdsOptions.Arn
      Table: !Ref RdsOptionsTable
  SettingsServiceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-settings-svc-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub sb-${Environment}-settings-svc-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                  - ssm:GetParametersByPath
                  - ssm:DeleteParameter
                  - ssm:DeleteParameters
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource:
                  - !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${RdsOptionsTable}
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/${SaaSBoostEventBus}
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${ResourcesBucket}/*
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'
              - Effect: Allow
                Action:
                  - acm:ListCertificates
                Resource: '*'
              - Effect: Allow
                Action:
                  - route53:ListHostedZones
                Resource: '*'
  SettingsServiceGetAllLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-settings-get-all
      RetentionInDays: 30
  SettingsServiceGetAll:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-settings-get-all
      Role: !GetAtt SettingsServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 1024
      Handler: com.amazon.aws.partners.saasfactory.saasboost.SettingsService::getSettings
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/SettingsService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  SettingsServiceGetByIdLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-settings-get-by-id
      RetentionInDays: 30
  SettingsServiceGetById:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-settings-get-by-id
      Role: !GetAtt SettingsServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.SettingsService::getSetting
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/SettingsService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  SettingsServiceGetSecretLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-settings-get-secret
      RetentionInDays: 30
  SettingsServiceGetSecret:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-settings-get-secret
      Role: !GetAtt SettingsServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.SettingsService::getSecret
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/SettingsService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  SettingsServiceUpdateLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-settings-update
      RetentionInDays: 30
  SettingsServiceUpdate:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-settings-update
      Role: !GetAtt SettingsServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.SettingsService::updateSetting
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/SettingsService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  SettingsServiceUpdateAppConfigLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-settings-update-config
      RetentionInDays: 30
  SettingsServiceUpdateAppConfig:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-settings-update-config
      Role: !GetAtt SettingsServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.SettingsService::updateAppConfig
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/SettingsService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          SAAS_BOOST_EVENT_BUS: !Ref SaaSBoostEventBus
          API_TRUST_ROLE: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}
          API_GATEWAY_STAGE: !Ref PrivateApiStage
          RESOURCES_BUCKET: !Ref ResourcesBucket
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  SettingsServiceGetAppConfigLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-settings-get-config
      RetentionInDays: 30
  SettingsServiceGetAppConfig:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-settings-get-config
      Role: !GetAtt SettingsServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 1024
      Handler: com.amazon.aws.partners.saasfactory.saasboost.SettingsService::getAppConfig
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/SettingsService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  SettingsServiceDeleteAppConfigLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-settings-delete-config
      RetentionInDays: 30
  SettingsServiceDeleteAppConfig:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-settings-delete-config
      Role: !GetAtt SettingsServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 1024
      Handler: com.amazon.aws.partners.saasfactory.saasboost.SettingsService::deleteAppConfig
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/SettingsService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  AppConfigEventHandlerLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-settings-app-config-events
      RetentionInDays: 30
  AppConfigEventHandler:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-settings-app-config-events
      Role: !GetAtt SettingsServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 1024
      Handler: com.amazon.aws.partners.saasfactory.saasboost.SettingsService::handleAppConfigEvent
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/SettingsService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          SAAS_BOOST_EVENT_BUS: !Ref SaaSBoostEventBus
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  SettingsServiceOptionsLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-settings-options
      RetentionInDays: 30
  SettingsServiceOptions:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-settings-options
      Role: !GetAtt SettingsServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 1024
      Handler: com.amazon.aws.partners.saasfactory.saasboost.SettingsService::options
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/SettingsService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          OPTIONS_TABLE: !Ref RdsOptionsTable
          JAVA_TOOL_OPTIONS: '-XX:+TieredCompilation -XX:TieredStopAtLevel=1'
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Settings"
  AppConfigEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-app-config-events
      Description: SaaS Boost application config events
      EventBusName: !Ref SaaSBoostEventBus
      EventPattern:
        {
          "source": [
            "saas-boost"
          ],
          "detail-type": [{
            "prefix": "Application Configuration "
          }]
        }
      State: ENABLED
      Targets:
        - Arn: !GetAtt AppConfigEventHandler.Arn
          Id: !Sub sb-${Environment}-app-config-events
  AppConfigEventsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AppConfigEventHandler
      Principal: events.amazonaws.com
      SourceArn: !GetAtt AppConfigEventRule.Arn
  AppConfigResourceFilesEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-settings-app-config
      Description: SaaS Boost application config resources bucket events
      EventPattern: !Sub |
        {
          "source": [
            "aws.s3"
          ],
          "detail-type": [
            "Object Created"
          ],
          "detail": {
            "reason": [
              "PutObject"
            ],
            "bucket": {
              "name": [
                "${ResourcesBucket}"
              ]
            },
            "object": {
              "key": [{
                "prefix": "services"
              }]
            }
          }
        }
      State: ENABLED
      Targets:
        - Arn: !GetAtt AppConfigEventHandler.Arn
          Id: !Sub sb-${Environment}-settings-app-config-file-event
  AppConfigResourceFilesEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AppConfigEventHandler
      Principal: events.amazonaws.com
      SourceArn: !GetAtt AppConfigResourceFilesEventRule.Arn
Outputs:
  SettingsServiceGetAllArn:
    Description: Settings Service get all settings Lambda ARN
    Value: !GetAtt SettingsServiceGetAll.Arn
  SettingsServiceByIdArn:
    Description: Settings Service get setting Lambda ARN
    Value: !GetAtt SettingsServiceGetById.Arn
  SettingsServiceOptionsArn:
    Description: Settings Service get options Lambda ARN
    Value: !GetAtt SettingsServiceOptions.Arn
  SettingsServiceGetAppConfigArn:
    Description: Settings Service get application configuration Lambda ARN
    Value: !GetAtt SettingsServiceGetAppConfig.Arn
  SettingsServiceUpdateAppConfigArn:
    Description: Settings Service update application configuration Lambda ARN
    Value: !GetAtt SettingsServiceUpdateAppConfig.Arn
  SettingsServiceDeleteAppConfigArn:
    Description: Settings Service delete application configuration Lambda ARN
    Value: !GetAtt SettingsServiceDeleteAppConfig.Arn
  SettingsServiceGetSecretArn:
    Description: Settings Service get decrypted secret setting Lambda ARN
    Value: !GetAtt SettingsServiceGetSecret.Arn
...