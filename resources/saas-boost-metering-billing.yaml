---
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: 2010-09-09
Description: AWS SaaS Boost Metering and Billing
Parameters:
  Environment:
    Description: SaaS Boost "environment" such as test, prod, beta, etc.
    Type: String
    MinLength: 1
  SaaSBoostBucket:
    Description: SaaS Boost assets S3 bucket
    Type: String
  LambdaSourceFolder:
    Description: Folder for lambda source code to change on each deployment
    Type: String
  EventBus:
    Description: SaaS Boost Event Bus
    Type: String
  SaaSBoostPrivateApi:
    Description: SaaS Boost Private API
    Type: String
  PrivateApiStage:
    Description: Private API Stage
    Type: String
  SaaSBoostUtilsLayer:
    Description: Arn of the Utils Layer
    Type: String
  ApiGatewayHelperLayer:
    Description: Arn of API Gateway Helper Layer for SaaS Boost
    Type: String
  TenantConfigurationIndexName:
      Type: String
      Default: sb-bill-sub-type-data-type-index
Resources:
  # Tenant product onboarding resources
  BillProductSetupEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-bill-product-setup
      Description: A filter for onboarding tenant to create CONFIG record
      EventBusName: !Ref EventBus
      EventPattern:
        detail-type:
          - Tenant Product Onboard
      State: ENABLED
      Targets:
        - Arn: !GetAtt BillProductSetupFunction.Arn
          Id: BillProductSetupFunction

  BillProductSetupLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-bill-product-setup
      RetentionInDays: 30

  BillProductSetupFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-bill-product-setup
      Runtime: java11
      Timeout: 300
      MemorySize: 384
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref MeteringBillingTable
      Handler: com.amazon.aws.partners.saasfactory.metering.onboarding.OnboardTenantProduct::handleRequest
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/BillingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Role: !GetAtt BillProductSetupFunctionRole.Arn
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Billing"

  BillProductSetupFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt BillProductSetupFunction.Arn
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt BillProductSetupEventRule.Arn

  BillProductSetupFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-bill-onboard-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-bill-onboard-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                  - dynamodb:PutItem
                Resource: !GetAtt MeteringBillingTable.Arn
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
  #####

  # Process billing event resources
  BillEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-bill-event
      Description: A filter for BILLING events on the billing event bridge
      EventBusName: !Ref EventBus
      EventPattern:
        detail-type:
          - "BILLING"
      State: ENABLED
      Targets:
        - Arn: !GetAtt BillEventProcessFunction.Arn
          Id: BillEventProcessFunction

  BillEventProcessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-bill-event-process
      RetentionInDays: 30

  BillEventProcessFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-bill-event-process
      Runtime: java11
      Timeout: 300
      MemorySize: 384
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref MeteringBillingTable
      Handler: com.amazon.aws.partners.saasfactory.metering.billing.ProcessBillingEvent::handleRequest
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/BillingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Role: !GetAtt BillEventProcessFunctionRole.Arn
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Billing"

  BillEventProcessFunctionEventsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt BillEventProcessFunction.Arn
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt BillEventRule.Arn

  BillEventProcessFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-bill-event-process-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-bill-event-process-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                Resource: !GetAtt MeteringBillingTable.Arn
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
  #####

  # Aggregation resources
  BillEventAggregationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-bill-aggregate
      RetentionInDays: 30

  BillEventAggregationFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-bill-aggregate
      Runtime: java11
      Timeout: 900
      MemorySize: 384
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref MeteringBillingTable
          DYNAMODB_CONFIG_INDEX_NAME: !Ref TenantConfigurationIndexName
      Handler: com.amazon.aws.partners.saasfactory.metering.aggregation.BillingEventAggregation::handleRequest
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/BillingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Role: !GetAtt BillEventAggregationFunctionRole.Arn
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Billing"

  BillEventAggregationFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-bill-aggregate-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-bill-aggregate-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !GetAtt MeteringBillingTable.Arn
                  - !Join
                    - ''
                    - - !GetAtt MeteringBillingTable.Arn
                      - '/index/'
                      - !Ref TenantConfigurationIndexName
              - Effect: Allow
                Action:
                  - dynamodb:ConditionCheckItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                Resource:
                  - !GetAtt MeteringBillingTable.Arn
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
  #####

  # Publish billing data to Stripe resources
  BillPublishToExternalEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-bill-publish-event
      Description: A scheduled task to publish billing data to Stripe
      # Scheduled rules only supported on the default event bus
      # Run this on the top of the hour
      ScheduleExpression: "cron(5 */1 * * ? *)"
      State: DISABLED
      Targets:
        - Arn: !Ref BillPublishToExternalStepFunction
          Id: BillPublishToExternalStepFunction
          RoleArn: !GetAtt BillPublishToExternalEventRuleRole.Arn

  BillPublishToExternalEventRuleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-bill-publish-event-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-bill-publish-event-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'states:StartExecution'
                Resource: !Ref BillPublishToExternalStepFunction

  BillPublishToExternalLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-bill-publish
      RetentionInDays: 30

  BillPublishToExternalStepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub sb-${Environment}-bill-publish
      DefinitionString:
        !Sub
          - |-
            {
              "StartAt": "AggregateEntries",
              "States" : {
                "AggregateEntries": {
                  "Type": "Task",
                  "Resource": "${BillingAggregationArn}",
                  "Next": "PutEvents"
                },
                "PutEvents" : {
                  "Type": "Task",
                  "Resource": "${StripeAggregationArn}",
                  "End": true
                }
              }
            }
          - BillingAggregationArn: !GetAtt [BillEventAggregationFunction, Arn]
            StripeAggregationArn: !GetAtt [BillPublishFunction, Arn]
      RoleArn: !GetAtt BillPublishToExternalStateMachineRole.Arn
      StateMachineType: EXPRESS
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt BillPublishToExternalLogGroup.Arn
        Level: ALL
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Billing"

  BillPublishToExternalStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-bill-publish-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-bill-publish-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource:
                  - !GetAtt BillEventAggregationFunction.Arn
                  - !GetAtt BillPublishFunction.Arn
              - Effect: Allow
                Action:
                  - 'logs:CreateLogDelivery'
                  - 'logs:GetLogDelivery'
                  - 'logs:UpdateLogDelivery'
                  - 'logs:DeleteLogDelivery'
                  - 'logs:ListLogDeliveries'
                  - 'logs:PutResourcePolicy'
                  - 'logs:DescribeResourcePolicies'
                  - 'logs:DescribeLogGroups'
                Resource: '*'
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'


  BillPublishLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-bill-publish-external
      RetentionInDays: 30

  BillPublishFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-bill-publish-external
      Runtime: java11
      Timeout: 300
      MemorySize: 384
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref MeteringBillingTable
          DYNAMODB_CONFIG_INDEX_NAME: !Ref TenantConfigurationIndexName
          API_TRUST_ROLE: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}
          API_GATEWAY_STAGE: !Ref PrivateApiStage
      Handler: com.amazon.aws.partners.saasfactory.metering.aggregation.StripeBillingPublish::handleRequest
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/BillingService-lambda.zip
      Layers:
         - !Ref SaaSBoostUtilsLayer
         - !Ref ApiGatewayHelperLayer
      Role: !GetAtt BillPublishFunctionRole.Arn
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Billing"


  BillPublishFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-bill-publish-external-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-bill-publish-external-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:Query'
                Resource:
                  - !GetAtt MeteringBillingTable.Arn
                  - !Join
                    - ''
                    - - !GetAtt MeteringBillingTable.Arn
                      - '/index/'
                      - !Ref TenantConfigurationIndexName
              - Effect: Allow
                Action:
                  - dynamodb:BatchWriteItem
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt MeteringBillingTable.Arn
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'
  #####

  # Data persistence resources
  MeteringBillingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub sb-${Environment}-meter-bill
      AttributeDefinitions:
        - AttributeName: data_type
          AttributeType: S
        - AttributeName: sub_type
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: !Ref TenantConfigurationIndexName
          KeySchema:
            - AttributeName: sub_type
              KeyType: HASH
            - AttributeName: data_type
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: data_type
          KeyType: HASH
        - AttributeName: sub_type
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Billing"

  ##Billing system onboarding
  BillingSystemSetupEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-bill-system-setup
      Description: A filter to setup billing system once it is configured through UI with API Key
      EventBusName: !Ref EventBus
      EventPattern:
        detail-type:
          - Billing System Setup
        source:
          - saas-boost
      State: ENABLED
      Targets:
        - Arn: !GetAtt BillingSystemSetupFunction.Arn
          Id: BillingSystemSetupFunction

  BillingSystemSetupLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-bill-system-setup
      RetentionInDays: 30

  BillingSystemSetupFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-bill-system-setup
      Runtime: java11
      Timeout: 300
      MemorySize: 384
      Environment:
        Variables:
          SAAS_BOOST_EVENT_BUS: !Ref EventBus
          API_TRUST_ROLE: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}
          API_GATEWAY_STAGE: !Ref PrivateApiStage
          BILL_PUBLISH_EVENT: !Sub sb-${Environment}-bill-publish-event
      Handler: com.amazon.aws.partners.saasfactory.metering.onboarding.BillingIntegration::setupBillingSystemListener
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/BillingService-lambda.zip
      Layers:
         - !Ref SaaSBoostUtilsLayer
         - !Ref ApiGatewayHelperLayer
      Role: !GetAtt BillingSystemSetupFunctionRole.Arn
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Billing"

  BillingSystemSetupFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt BillingSystemSetupFunction.Arn
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt BillingSystemSetupEventRule.Arn

  BillingSystemSetupFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-bill-system-setup-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-bill-system-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - events:DescribeEventBus
                  - events:PutEvents
                  - events:EnableRule
                  - events:DisableRule
                Resource:
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/${EventBus}
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/sb-${Environment}-bill-publish-event
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'

## Function to setup Tenant in Billing system
  BillingTenantSetupEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-bill-tenant-setup
      Description: A filter for when a tenant is provisioned and needs to be setup in billing system
      EventBusName: !Ref EventBus
      EventPattern:
        detail-type:
          - Billing Tenant Setup
        source:
          - saas-boost
      State: ENABLED
      Targets:
        - Arn: !GetAtt BillingTenantSetupFunction.Arn
          Id: BillingTenantSetupFunction

  BillingTenantSetupLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-bill-tenant-setup
      RetentionInDays: 30

  BillingTenantSetupFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-bill-tenant-setup
      Runtime: java11
      Timeout: 300
      MemorySize: 384
      Environment:
        Variables:
          SAAS_BOOST_EVENT_BUS: !Ref EventBus
          API_TRUST_ROLE: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}
          API_GATEWAY_STAGE: !Ref PrivateApiStage
          BILL_PUBLISH_EVENT: !Sub sb-${Environment}-bill-publish-event
      Handler: com.amazon.aws.partners.saasfactory.metering.onboarding.BillingIntegration::setupTenantBillingListener
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/BillingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Role: !GetAtt BillingTenantSetupFunctionRole.Arn
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Billing"

  BillingTenantSetupFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt BillingTenantSetupFunction.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt BillingTenantSetupEventRule.Arn

  BillingTenantSetupFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-bill-tenant-setup-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-bill-tenant-setup-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:CreateLogGroup
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - events:DescribeEventBus
                  - events:PutEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/${EventBus}
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'
## Function to disable Tenant/Subscription in Billing system
  BillingTenantDisableEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-bill-tenant-disable
      Description: A filter for when a tenant is disabled and needs to be canceled in billing system
      EventBusName: !Ref EventBus
      EventPattern:
        detail-type:
          - Billing Tenant Disable
        source:
          - saas-boost
      State: ENABLED
      Targets:
        - Arn: !GetAtt BillingTenantDisableFunction.Arn
          Id: BillingTenantDisableFunction

  BillingTenantDisableLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-bill-tenant-disable
      RetentionInDays: 30

  BillingTenantDisableFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-bill-tenant-disable
      Runtime: java11
      Timeout: 300
      MemorySize: 384
      Environment:
        Variables:
          SAAS_BOOST_EVENT_BUS: !Ref EventBus
          API_TRUST_ROLE: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}
          API_GATEWAY_STAGE: !Ref PrivateApiStage
      Handler: com.amazon.aws.partners.saasfactory.metering.onboarding.BillingIntegration::disableTenantBillingListener
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/BillingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Role: !GetAtt BillingTenantDisableFunctionRole.Arn
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Billing"

  BillingTenantDisableFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt BillingTenantDisableFunction.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt BillingTenantDisableEventRule.Arn

  BillingTenantDisableFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-bill-tenant-disable-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub sb-${Environment}-bill-tenant-setup-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - events:DescribeEventBus
                  - events:PutEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/${EventBus}
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub '{{resolve:ssm:/saas-boost/${Environment}/PRIVATE_API_TRUST_ROLE}}'